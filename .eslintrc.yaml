# 안녕하세요! 이 파일은 tslint-to-eslint-config에 의해 자동 생성되었습니다.
# https://github.com/typescript-eslint/tslint-to-eslint-config
# 공식적으로 tslint는 @typescript-eslint/eslint-plugin으로 마이그레이션되었으므로,
# 최종적으로 이 구성을 기본으로 해서 확장하도록 이 구성을 전환할 것을 권장합니다.
# 이 파일은 이 프로젝트의 원래 TSLint 구성에 가장 근접한
# 프로젝트의 원래 TSLint 구성을 플로그인의 문법으로 변환했습니다.
# https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md
# 행복한 린팅! 💖
---
$schema: https://json.schemastore.org/eslintrc.json
root: true
env:
  browser: true
  commonjs: true
  es6: true
  node: true
extends:
  - eslint:recommended
  - plugin:import/recommended
  - plugin:import/typescript
  - plugin:@typescript-eslint/eslint-recommended
  - plugin:@typescript-eslint/recommended
  - plugin:jest-dom/recommended
  - plugin:jsx-a11y/recommended
  - plugin:react-hooks/recommended
  - plugin:react/recommended
  - plugin:@next/next/recommended
  - plugin:storybook/recommended
  - next/core-web-vitals
  - next
  - prettier
overrides:
  - extends:
      - plugin:testing-library/react
    files:
      - '**/__tests__/**/*.[jt]s?(x)'
      - '**/__mocks__/**/*.[jt]s?(x)'
      - '**/?(*.)+(spec|test).[jt]s?(x)'
  - files:
      - '**/*.ts?(x)'
    parser: '@typescript-eslint/parser'
    parserOptions:
      ecmaFeatures:
        jsx: true
      sourceType: module
      warnOnUnsupportedTypeScriptVersion: true
settings:
  next:
    rootDir: .
  react:
    version: detect
  import/parsers:
    '@typescript-eslint/parser':
      - .ts
      - .tsx
      - .d.ts
  import/resolver:
    node: true
    typescript: true
parser: '@typescript-eslint/parser'
parserOptions:
  ecmaVersion: latest
  project: tsconfig.json
  sourceType: module
  tsconfigRootDir: ./
  warnOnUnsupportedTypeScriptVersion: true
  allowImportExportEverywhere: true
  babelOptions:
    caller:
      supportsTopLevelAwait: true
    presets:
      - next/babel
  ecmaFeatures:
    jsx: true
plugins:
  - import
  - react
  - jsx-a11y
  - prefer-arrow
  - eslint-plugin-react
  - eslint-plugin-jest-dom
  - eslint-plugin-testing-library
rules:
  complexity:
    - error
    - max: 10
  eqeqeq:
    - error
    - allow-null
  id-denylist:
    - error
    - any
    - Number
    - number
    - String
    - string
    - Boolean
    - boolean
    - Undefined
    - undefined
  max-classes-per-file:
    - error
    - 1
  new-parens: warn
  no-case-declarations: warn
  no-console:
    - warn
    - allow:
        - debug
        - error
  no-dupe-args: warn
  no-dupe-class-members: warn
  no-mixed-spaces-and-tabs:
    - error
    - smart-tabs
  no-var: error
  no-with: error
  one-var:
    - error
    - never
  prefer-const: warn
  sort-imports:
    - error
    - allowSeparatedGroups: false
      ignoreCase: false
      ignoreDeclarationSort: false
      ignoreMemberSort: false
      memberSyntaxSortOrder:
        - none
        - all
        - multiple
        - single
  spaced-comment:
    - error
    - always
    - markers:
        - /
  use-isnan: warn
  '@next/next/google-font-display': error
  '@next/next/google-font-preconnect': error
  '@next/next/inline-script-id': error
  '@next/next/next-script-for-ga': error
  '@next/next/no-assign-module-variable': error
  '@next/next/no-async-client-component': error
  '@next/next/no-before-interactive-script-outside-document': error
  '@next/next/no-css-tags': error
  '@next/next/no-document-import-in-page': error
  '@next/next/no-duplicate-head': error
  '@next/next/no-head-element': error
  '@next/next/no-head-import-in-document': error
  '@next/next/no-html-link-for-pages': error
  '@next/next/no-img-element': error
  '@next/next/no-page-custom-font': error
  '@next/next/no-script-component-in-head': error
  '@next/next/no-styled-jsx-in-document': error
  '@next/next/no-sync-scripts': error
  '@next/next/no-title-in-document-head': error
  '@next/next/no-typos': error
  '@next/next/no-unwanted-polyfillio': error
  '@typescript-eslint/type-annotation-spacing': error
  '@typescript-eslint/ban-ts-comment':
    - error
    - ts-check: allow-with-description
      ts-expect-error: allow-with-description
      ts-ignore: allow-with-description
      ts-nocheck: allow-with-description
  import/default: error
  import/export: error
  import/named: off
  import/namespace: error
  import/no-anonymous-default-export: error
  import/no-duplicates: error
  import/no-named-as-default: error
  import/no-named-as-default-member: error
  import/no-unresolved: off
  jest-dom/prefer-checked: error
  jest-dom/prefer-empty: error
  jest-dom/prefer-enabled-disabled: error
  jest-dom/prefer-focus: error
  jest-dom/prefer-in-document: error
  jest-dom/prefer-required: error
  jest-dom/prefer-to-have-attribute: error
  jest-dom/prefer-to-have-class: error
  jest-dom/prefer-to-have-style: error
  jest-dom/prefer-to-have-text-content: error
  jest-dom/prefer-to-have-value: error
  jsx-a11y/alt-text:
    - error
    - elements:
        - img
      img:
        - Image
  jsx-a11y/aria-props: error
  jsx-a11y/aria-proptypes: error
  jsx-a11y/aria-unsupported-elements: error
  jsx-a11y/role-has-required-aria-props: error
  jsx-a11y/role-supports-aria-props: error
  prefer-arrow/prefer-arrow-functions:
    - error
    - allowStandaloneDeclarations: true
      classPropertiesAllowed: true
      disallowPrototype: true
      singleReturnOnly: true
  react/jsx-no-target-blank: error
  react/no-unescaped-entities: error
  react/no-unknown-property:
    - error
    - ignore: [jsx]
  react/prop-types: off
  react/react-in-jsx-scope: off
